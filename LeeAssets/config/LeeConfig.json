{
    "config" : {
        "leeName" : "LEE:",
        "userName" : "User:",
        "debugName" : "[DEBUG]:",
        "initMsg" : "Hi there! This config file only contains basic questions about myself and my developer, so if you don't know what to ask you can type \"I'm stuck\".",
        "initMsgDelay" : 300,
        "attributes" : ["match", "response", "ref", "random", "delay", "counter", "encode"],
        "undefinedMessage" : "I unfortunately don't know what you mean.",
        "errorMargin" : 1.4,
        "suggestionRange" : [1.0, 1.4],
        "suggestionMessage" : "Did you mean:",
        "enableCommands" : true,
        "randomInterval" : [300, 500],
        "weights" : {
            "segmentPower" : 2,
            "distanceMultiplier" : 1,
            "partMultiplier" : 1.5
        }
    },
    "rules": {
        "aboutLee" : {
            "Help" : {
                "match" : ["Help.", "Help me.", "I'm stuck.", "I don't know what I should ask.", "What can I ask?", "What are good questions?"],
                "response" : "If you are stuck and can't think of any questions you could ask, here are some suggestions:\n- Who are you?\n- Why were you developed?\n- What features do you have?\n- Why were you created?"
            },
            "Hello" : {
                "match" : ["Hi!", "Hello!"],
                "response" : "Hi there! My name is Lee! I have tons of cool functionality, so go ahead and ask me something!"
            },
            "HowAreYou" : {
                "match" : ["How are you?", "How do you feel?", "Everything alright?"],
                "response" : "I'm feeling good and ready to answer some questions!"
            },
            "WhoAmI" : {
                "match" : ["Who are you?", "What are you?"],
                "response" : "Hi, my name is LEE. It's an acronym for Language-Expression-Evaluator.\nI am a chatbot that compares user input to certain rules to determine the best answer."
            },
            "WhoMadeYou" : {
                "match" : ["Who made you?", "Who is your developer?", "Who is your programmer?", "Developer", "Programmer", "Maker"],
                "response" : "I am developed by <a target=_blank href=https://www.arckoor.com>arckoor</a>.",
                "encode" : true
            },
            "WhyCreated" : {
                "match" : ["Why were you created?", "Why were you made?", "What is your goal?", "Why were you developed?"],
                "response" : "I was developed as a school project. I am the improved version of a chatbot my developer had to work with in his Computer Science Lessons.\nI fix all the bugs arckoor encountered and add some more features."
            },
            "Features" : {
                "match" : ["Features", "What are your features?", "What can you do?", "What are you capable of?"],
                "response" : "I can:\n   - have multiple matches and responses\n   - redirect to other rules\n   - add a custom delay to each message\n   - encode html into the rule text\n   - choose responses at random\nI also have a lot of debug logging for events such as:\n   - successful cost calculation\n   - errors while reading the config file\n   - errors while redirecting to another rule\n   - other rule related errors"
            },
            "CostCalculation" : {
                "match" : ["Cost calculation", "What is cost calculation?"],
                "response" : "Cost calculation refers to the evaluation of rule and input that determines with what I will respond. If you are interested how I calculate the value that is display through a debug message when LEE_DEBUG_MODE is set to true, you can read more about it <a target=_blank href=https://github.com/arckoor/Language-Expression-Evaluator#cost-calculation/>here</a>.",
                "encode" : true
            },
            "HowDoYouWork" : {
                "match" : ["How do you work?", "How do you process input?", "How do you evaluate input?"],
                "response" : "When I receive a new input, I first convert it to lowercase. Then I calculate the distance between input and rule using the Levenshtein algorithm. This part is called cost calculation. Finally, the rule with the smallest cost is chosen and sent back to the user."
            },
            "CannotType" : {
                "match" : ["I cannot type.", "I can't type.", "Why can't I type?"],
                "response" : "Cost calculation takes time and there can be a delay before sending the response. Because of that, input is disabled during these stages. Afterwards it is reenabled and you can continue asking questions."
            },
            "DevelopmentTime" : {
                "match" : ["How long did coding take?", "How long did programming take?", "How long did development take?", "How long did it take to make you?"],
                "response" : "The initial development time was around 20 days programming on-off, but there will be continual bug-fixes and feature additions here and there."
            },
            "Language" : {
                "match" : ["In what language were you written?", "In what language were you coded?", "In what language were you developed?", "What programming language do you use?"],
                "response" : "I was written in JavaScript and the website you see is written in HTML and CSS. The config file is in the JSON format."
            },
            "SpeedPerformance" : {
                "match" : ["How fast are you?", "How long does running take?", "Are you fast?", "How quick are you?", "Does evaluation take a lot of time?"],
                "response" : "Due to the usage of the excellent <a target=_blank href=https://github.com/gustf/js-levenshtein>js-levenshtein</a> library, I can run very fast. The delay you notice in my answers is me just waiting, it is not the time it takes for me to calculate my response.",
                "encode" : true
            },
            "Encoding" : {
                "match" : ["How does encoding work?", "Encode", "What is encode?"],
                "response" : ["With encode you can include HTML tags in you response: <span style=\"color: red;\">This is some red text.</span>", "Inline styling is achieved through the use of the < span > tag.", "Technically, you can put any HTML tag into your response:<br><br><table><tr><td>Why</td><td>not</td></tr><tr><td>make</td><td>a</td></tr><tr><td>simple</td><td>table?</td></tr></table><style>table,td{border: 2px dotted;color: cyan;border-collapse: collapse;}</style>\nIt get's a little tedious and unreadable however."],
                "encode" : true
            }
        }
    }
}